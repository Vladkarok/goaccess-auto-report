server {
    listen 443 http2 ssl;

    server_name example.com; # replace with your domain

    ssl_certificate /etc/nginx/ssl/example.com.pem;
    ssl_certificate_key /etc/nginx/ssl/example.com.key;
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;
    ssl_session_tickets off;
    ssl_protocols TLSv1.3 TLSv1.2;
    ssl_ciphers 'TLS-CHACHA20-POLY1305-SHA256:TLS-AES-256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384';
    ssl_ecdh_curve X448:secp521r1:secp384r1;
    ssl_prefer_server_ciphers on;
    ssl_stapling on;
    ssl_stapling_verify on;

    root /path/to/webroot; #in script it is $GOACCESS_HOME/www directory
    index 0report.html; # we specify report prefixes in config file. this is for today's report by default

    server_tokens off;
    auth_basic "Protected Area";
    auth_basic_user_file /etc/nginx/.htpasswd;

    access_log /var/log/nginx/go.access.log;
    error_log /var/log/nginx/go.error.log;

    # Gzip Settings
    gzip on;
    gzip_disable "msie6"; # Disable gzip for very old browsers that do not support it correctly
    gzip_vary on; # Tell proxies to cache both gzipped and regular versions of a resource
    gzip_proxied any; # Enable gzip for all proxied requests
    gzip_comp_level 6; # Compression level (1-9)
    gzip_buffers 16 8k; # Number and size of buffers used to compress data
    gzip_http_version 1.1; # Use HTTP 1.1 to take advantage of chunked transfer encoding
    gzip_min_length 256; # Minimum length of a response to trigger gzip

    # Cache-Control settings for HTML files
    location ~* \.html$ {
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
        add_header Expires 0;
        etag on;
        try_files $uri $uri/ =404;
    }

    location /todays-report {
        alias /path/to/webroot;
        try_files /0report.html =404;
    }

    location /yesterdays-report {
        alias /path/to/webroot;
        try_files /1report.html =404;
    }

    location /weekly-report {
        alias /path/to/webroot;
        try_files /7report.html =404;
    }

    location / {
        try_files $uri $uri/ =404;
    }

}

server {
    listen 80;

    server_name example.com;

    location /.well-known/acme-challenge {
        root /opt/www/acme;
    }

    location / {
        return 301 https://example.com$request_uri;
    }

}
